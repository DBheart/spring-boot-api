openapi: 3.0.1
info:
  title: My API
  description: An ecommerce sample demonstrating restdocs-api-spec
  version: 0.1.0
servers:
- url: http://localhost:9020
tags: []
paths:
  /lecture/list:
    get:
      tags:
      - 결품/지연 등록처리(위수탁)
      summary: 결품/지연 조회
      description: 결품/지연 조회
      operationId: list
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lecture-list-1326974044'
              examples:
                list:
                  value: |-
                    {
                      "status" : "SUCCESS",
                      "code" : 200,
                      "message" : "Requested Successful",
                      "data" : null
                    }
  /lecture/save:
    post:
      tags:
      - 결품/지연 등록처리(위수탁)
      summary: 결품/지연 조회
      description: 결품/지연 조회
      operationId: lecture-save
      parameters:
      - name: name
        in: query
        description: 수강과목
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lecture-save1007353693'
              examples:
                lecture-save:
                  value: |-
                    [ {
                      "seq" : 1,
                      "name" : "math"
                    } ]
  /sample:
    get:
      tags:
      - 테스트 param
      summary: Get 테스트
      description: Get 테스트
      operationId: test-get
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainResponse'
              examples:
                test-get:
                  value: |-
                    {
                      "message" : "get test success"
                    }
  /sample/dto:
    post:
      tags:
      - 테스트 param
      summary: Post 테스트- body
      description: Post 테스트- body
      operationId: post param
      parameters:
      - name: message
        in: query
        description: message
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /sample/get/{userId}:
    get:
      tags:
      - 테스트 param
      summary: Get 테스트- path
      description: Get 테스트- path
      operationId: get path
      parameters:
      - name: userId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /web/400:
    get:
      tags:
      - 웹테스트
      summary: 데이터 없음
      description: 데이터 없음
      operationId: web-not-page
      responses:
        "401":
          description: "401"
  /web/500:
    get:
      tags:
      - 웹테스트
      summary: 웹 서버오류
      description: 웹 서버오류
      operationId: web-server-error
      responses:
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web-500436436699'
              examples:
                web-server-error:
                  value: |-
                    {
                      "status" : 500,
                      "error" : "FAIL",
                      "message" : "500 INTERNAL_SERVER_ERROR \"서버오류가 발생하였습니다.\""
                    }
  /web/list:
    get:
      tags:
      - 웹테스트
      summary: 웹 성공테스트
      description: 웹 성공테스트
      operationId: web-list-success
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web-list1745388528'
              examples:
                web-list-success:
                  value: |-
                    [ {
                      "id" : "deity",
                      "name" : "name1"
                    }, {
                      "id" : "deity2",
                      "name" : "name2"
                    } ]
components:
  schemas:
    lecture-list-1326974044:
      type: object
      properties:
        code:
          type: number
          description: 상태코드
        message:
          type: string
          description: 메시지
        status:
          type: string
          description: 상태
    lecture-save1007353693:
      type: array
      description: 강의목록
      items:
        type: object
        properties:
          name:
            type: string
            description: 강의명
          seq:
            type: number
            description: 강의코드
        description: 강의목록
    web-list1745388528:
      type: array
      description: 웹데이터
      items:
        type: object
        properties:
          name:
            type: string
            description: 이름
          id:
            type: string
            description: 아이디
        description: 웹데이터
    web-500436436699:
      type: object
      properties:
        message:
          type: string
          description: 오류 메세지
        error:
          type: string
          description: 오류코드
        status:
          type: number
          description: status
    MainResponse:
      title: MainResponse
      type: object
      properties:
        message:
          type: string
          description: 메세지
